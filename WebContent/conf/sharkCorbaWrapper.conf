#********************************************************************
# Wrapper Properties
#********************************************************************
# Java Application
wrapper.java.command=C:/j2sdk/bin/java

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=C:/Shark/lib/contrib/*.jar
wrapper.java.classpath.2=C:/Shark/lib/*.jar
wrapper.java.classpath.3=C:/Shark/lib/engine/*.jar
wrapper.java.classpath.4=C:/Shark/lib/wrapper/*.jar
wrapper.java.classpath.5=c:/Shark/lib/*.jar
wrapper.java.classpath.6=c:/Shark/lib/*.zip

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=C:/Shark/lib/contrib/ext

# Initial Java Heap Size (in MB)
wrapper.java.initmemory=16

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=64

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=org.enhydra.shark.corba.SharkCORBAServer
wrapper.app.parameter.2=C:/Shark/conf/Shark.conf

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=C:/Shark/logs/wrapper.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=6m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=9

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=ERROR

#********************************************************************
# Wrapper NT Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.ntservice.name=SharkCORBA

# Display name of the service
wrapper.ntservice.displayname=Shark CORBA service

# Description of the service
wrapper.ntservice.description=Shark CORBA service run from C:/Shark.

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

# Number of seconds to allow between the time that the Wrapper asks the JVM to
#  shutdown and the time that the JVM side of the Wrapper responds that it is
#  stopping. 0 means never time out. Defaults to 30 seconds.
#wrapper.shutdown.timeout=60

# Number of seconds to allow between the time that the JVM reports that it is
#  stopped and the time that the JVM process actually terminates. 0 means never
#  time out. Defaults to 5 seconds.
#wrapper.jvm_exit.timeout=5

# Number of seconds to allow for the JVM to be launched and contact the
#  wrapper before the wrapper should assume that the JVM is hung and
#  terminate the JVM process.  0 means never time out.  Defaults to
#  30 seconds.
#wrapper.startup.timeout=30

# Number of seconds to allow between the wrapper pinging the JVM and the
#  response.  0 means never time out.  Defaults to 30 seconds.
#wrapper.ping.timeout=60

# Maximum number of times that the Wrapper will attempt to restart the JVM if
#  each attempted invocation exits abnormally or is restarted shortly after
#  having being launched. Must be at least 1. Defaults to 5 invocations.
wrapper.max_failed_invocations=99

#wrapper.on_exit.default=RESTART
#wrapper.on_exit.0=SHUTDOWN

